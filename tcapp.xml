<?xml version="1.0" ?>
<projects>
  <project name="tcapp">
    <title>tcapp product</title>
    <description>
      TCAPP required forms
    </description>
    <maintainer>
      <personname>Sebastien Mirolo</personname>
      <email>smirolo@djaodjin.com</email>
    </maintainer>
    <repository>
      <fetch><url>/var/www/tcapp/./reps/tcapp/htdocs</url></fetch>
      <dep name="Django" target="python" includes="1.9.9">
        <lib>.*/(django)/core/wsgi.py</lib>
      </dep>
      <dep name="gunicorn" target="python">
        <bin>gunicorn</bin>
      </dep>
      <dep name="django-crispy-forms" target="python">
        <lib>.*/(crispy_forms)/__init__.py</lib>
      </dep>
      <dep name="django-urldecorators" target="python">
        <lib>.*/(urldecorators)/__init__.py</lib>
      </dep>
      <dep name="djangorestframework" target="python">
        <lib>.*/(rest_framework)/__init__.py</lib>
      </dep>
      <dep name="django-analytical" target="python">
        <lib>.*/(analytical)/__init__.py</lib>
      </dep>
      <dep name="django-assets" target="python">
        <lib>.*/(django_assets)/__init__.py</lib>
      </dep>
      <dep name="django-extra-views" target="python">
        <lib>.*/(extra_views)/__init__.py</lib>
      </dep>
      <dep name="django-countries" target="python">
        <lib>.*/(django_countries)/__init__.py</lib>
      </dep>
      <dep name="python-dateutil" target="python">
        <lib>.*/(dateutil)/__init__.py</lib>
      </dep>
      <dep name="Markdown" target="python">
        <lib>.*/(markdown)/__init__.py</lib>
      </dep>
      <dep name="Fabric" target="python">
        <lib>.*/(fabric)/__init__.py</lib>
      </dep>

      <!-- XXX weird semantics when we use target="python".
           It will try to create a python/dws.mk, which is
           correct behavior but unexpected and troublesome
           in this case. -->
      <dep name="djaodjin-deployutils" target="python">
        <lib>.*/(deployutils)/__init__.py</lib>
      </dep>
      <dep name="djaodjin-extended-templates">
        <lib>.*/(extended_templates)/__init__.py</lib>
      </dep>
      <dep name="djaodjin-pages">
        <lib>.*/(pages)/__init__.py</lib>
      </dep>
      <!-- for development -->
      <dep name="django-extensions" target="python">
        <lib>.*/(django_extensions)/__init__.py</lib>
      </dep>
      <dep name="django-debug-panel" target="python">
        <lib>.*/(debug_panel)/__init__.py</lib>
      </dep>
      <dep name="django-debug-toolbar" target="python" excludes="1.2.2">
        <!-- XXX with 1.2.2 clicking makes the menu disappear instead
             of showing information pane. -->
        <lib>.*/(debug_toolbar)/__init__.py</lib>
      </dep>
      <dep name="sqlparse" target="python">
        <!-- required by django-debug-toolbar without being a prerequisite -->
        <lib>.*/(sqlparse)/__init__.py</lib>
      </dep>
      <!-- end of for development -->
      <alternates>
        <!-- XXX impossible to find setproctitle in MacPorts -->
        <alternate name="Darwin">
          <dep name="py27-coverage">
            <bin>coverage</bin>
          </dep>
          <dep name="py27-billiard">
            <lib>.*/(_billiard.so)</lib>
          </dep>
          <dep name="py27-crypto">
            <lib>.*/(Crypto)/Hash/_SHA256.so</lib>
          </dep>
          <dep name="py27-lxml">
            <lib>.*/(etree.so)</lib>
          </dep>
          <dep name="py27-Pillow">
            <!-- Pillow is an active fork of PIL. py27-pil and py27-Pillow
                 are conflicting ports. -->
            <lib>.*/(PIL)/__init__.py</lib>
          </dep>
          <dep name="py27-psycopg2">
            <!-- because we connect to postgresql and it is not automatically
                 pulled from Django. -->
            <lib>.*/(psycopg2)/__init__.py</lib>
          </dep>
          <dep name="setproctitle" target="python">
            <lib>.*/(setproctitle.so)</lib>
          </dep>
        </alternate>
        <alternate name="Fedora">
          <dep name="python-coverage">
            <bin>coverage</bin>
          </dep>
          <dep name="python-billiard">
            <lib>.*/(_billiard.so)</lib>
          </dep>
          <dep name="python-crypto">
            <lib>.*/(Crypto)/Hash/_SHA256.so</lib>
          </dep>
          <dep name="python-lxml">
            <lib>.*/(etree.so)</lib>
          </dep>
          <dep name="python-pillow">
            <lib>.*/(_imaging.so)</lib>
          </dep>
          <dep name="python-psycopg2">
            <!-- because we connect to postgresql and it is not automatically
                 pulled from Django. -->
            <lib>.*/(psycopg2)/__init__.py</lib>
          </dep>
          <dep name="python-setproctitle">
            <lib>.*/(setproctitle.so)</lib>
          </dep>
        </alternate>
      </alternates>
    </repository>
  </project>
  <project name="djaodjin-extended-templates">
    <title>EML and PDF templates</title>
    <description>
      Templates to send emails in Plain + HTML format.
    </description>
    <maintainer>
      <personname>The DjaoDjin Team</personname>
      <email>support@djaodjin.com</email>
    </maintainer>
    <repository>
      <dep name="beautifulsoup4" target="python">
        <lib>.*/(bs4)/__init__.py</lib>
      </dep>
      <dep name="premailer" target="python">
        <lib>.*/(premailer)/__init__.py</lib>
      </dep>
      <dep name="WeasyPrint" target="python">
        <lib>.*/(weasyprint)/__init__.py</lib>
      </dep>
      <dep name="podofo-flatform">
        <bin>podofo-flatform</bin>
      </dep>
      <alternates>
        <alternate name="Darwin">
          <dep name="python-cffi">
            <lib>.*/_cffi_backend.so</lib>
          </dep>
          <dep name="python-tinycss">
            <lib>.*/(tinycss)/__init__.py</lib>
          </dep>
        </alternate>
        <alternate name="Fedora">
          <dep name="python-cffi">
            <lib>.*/_cffi_backend.so</lib>
          </dep>
          <dep name="python-tinycss">
            <lib>.*/(tinycss)/__init__.py</lib>
          </dep>
        </alternate>
      </alternates>
    </repository>
  </project>
  <project name="podofo-flatform">
    <title>Generates PDF from a template and key/value pairs</title>
    <description>
      Generates PDF from a template and key/value pairs
    </description>
    <maintainer>
      <personname>The DjaoDjin Team</personname>
      <email>support@djaodjin.com</email>
    </maintainer>
    <repository>
      <dep name="freetype">
        <lib>freetype.so</lib>
      </dep>
      <dep name="fontconfig">
        <lib>fontconfig.so</lib>
      </dep>
      <dep name="libjpeg-turbo">
        <!-- Fedora 21 seems to have abandonned the original JPEG library.
             "libjpeg-turbo is a derivative of libjpeg that uses SIMD
             instructions" as stated by macports. -->
        <lib>jpeg.so</lib>
      </dep>
      <dep name="libidn">
        <lib>idn.so</lib>
      </dep>
      <dep name="zlib">
        <lib>z.so</lib>
      </dep>
      <alternates>
        <alternate name="Darwin">
          <dep name="gcc">
            <bin>g++</bin>
          </dep>
          <dep name="openssl">
            <lib>crypto.so</lib>
          </dep>
          <dep name="podofo">
            <include>(podofo)/podofo.h</include>
            <lib>podofo.so</lib>
          </dep>
          <dep name="reportlab" target="python" includes="2.7">
            <lib>.*/(reportlab)/__init__.py</lib>
          </dep>
        </alternate>
        <alternate name="Fedora">
          <dep name="gcc-c++">
            <bin>g++</bin>
          </dep>
          <dep name="openssl">
            <lib>crypto.so</lib>
          </dep>
          <dep name="podofo-devel">
            <include>(podofo)/podofo.h</include>
            <lib>podofo</lib>
          </dep>
          <dep name="python-reportlab" includes="2.7">
            <lib>.*/(reportlab)/__init__.py</lib>
          </dep>
        </alternate>
      </alternates>
      <dep name="drop">
        <bin>dws</bin>
        <share>(dws)/prefix.mk</share>
      </dep>
    </repository>
  </project>
  <project name="contrib/django-storages">
    <title>Patch in django-storages to support access to 3rd party buckets</title>
    <description>
Django-storages-redux is a Python3 compatible fork of django-storages
from BitBucket with actual uploads to PyPi
    </description>
    <maintainer>
      <personname>The DjaoDjin Team</personname>
      <email>support@djaodjin.com</email>
    </maintainer>
    <repository>
      <shell>
cd $srcTop/contrib/django-storages
TMPDIR=$buildTop $binDir/pip --log-file $buildTop/pip.log --cache-dir $buildTop/.cache/pip install .
      </shell>
      <dep name="drop">
        <bin>dws</bin>
        <share>(dws)/prefix.mk</share>
      </dep>
    </repository>
  </project>
  <project name="djaodjin-pages">
    <title>open source pages django app</title>
    <description>
      open source pages django app
    </description>
    <maintainer>
      <personname>The DjaoDjin Team</personname>
      <email>support@djaodjin.com</email>
    </maintainer>
    <repository>
      <dep name="beautifulsoup4" target="python">
        <lib>.*/(bs4)/__init__.py</lib>
      </dep>
      <dep name="bleach" target="python">
        <lib>.*/(bleach)/__init__.py</lib>
      </dep>
      <!-- boto is not pulled as a prerequisite of django-storages -->
      <dep name="boto" target="python">
        <lib>.*/(boto)/__init__.py</lib>
      </dep>
      <dep name="django-storages-redux" target="python">
        <lib>.*/(storages)/__init__.py</lib>
      </dep>
      <dep name="drop">
        <bin>dws</bin>
        <share>(dws)/prefix.mk</share>
      </dep>
      <dep name="Markdown" target="python">
        <lib>.*/(markdown)/__init__.py</lib>
      </dep>
      <alternates>
        <alternate name="Fedora">
          <dep name="gcc">
            <bin>gcc</bin>
          </dep>
        </alternate>
      </alternates>
    </repository>
  </project>
  <project name="drop">
    <title>inter-project dependencies tool</title>
    <description>
Drop is an inter-project dependencies tool that binds functionality of source
control systems, autoconf scripts, make and package managers. Its efficiency
is measured by the time it takes to setup a random machine for code development
first and subsequently the time spent in rebuilding the source base after any
change.
    </description>
    <maintainer>
      <personname>Sebastien Mirolo</personname>
      <email>smirolo@djaodjin.com</email>
    </maintainer>
    <repository>
      <dep name="make">
        <!-- For some reason the Python XML parser throws up a not well-formed
             exception on "<3.81" -->
        <bin excludes="[[0,3.81]]">make</bin>
      </dep>
      <dep name="git-all">
        <bin>git</bin>
        <share>(git-core)/templates</share>
      </dep>
    </repository>
  </project>
</projects>
